!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALL	FW_Inc.h	45;"	d
CLIENT_PROCNAME	FW_Inc.h	27;"	d
ClearStdin	FW_Client.c	/^void ClearStdin( char *pszTemp )$/;"	f
CntCurrentEmployee	FW_Server.c	/^int CntCurrentEmployee( int *pnCntEmployee )$/;"	f
DAL_FAIL	FW_Inc.h	/^	DAL_FAIL = -2, FGETS_FAIL = -3, TAP_FAIL = -4,$/;"	e	enum:__anon3
DELETE	FW_Inc.h	32;"	d
Delete	FW_Client.c	/^int Delete( struct REQUEST_s *ptRequest )$/;"	f
Delete	FW_Server.c	/^int Delete( struct REQUEST_s *ptRequest )$/;"	f
DestroyPreparedStatement	FW_Server.c	/^void DestroyPreparedStatement()$/;"	f
EXENAME	Makefile	/^EXENAME=	server$/;"	m
FGETS_FAIL	FW_Inc.h	/^	DAL_FAIL = -2, FGETS_FAIL = -3, TAP_FAIL = -4,$/;"	e	enum:__anon3
FLAG_RUN	FW_Inc.h	35;"	d
FLAG_STOP	FW_Inc.h	36;"	d
GetOldData	FW_Server.c	/^int GetOldData( int nId, char *pszAttribute, char *pszOldData, int nSizeOldData )$/;"	f
ID	FW_Inc.h	46;"	d
ID_NOT_EXIST	FW_Inc.h	/^	ID_NOT_EXIST = 30, NAME_NOT_EXIST = 31,$/;"	e	enum:__anon3
INPUT_FAIL	FW_Inc.h	/^	SUCCESS = 1, INPUT_FAIL = 2,$/;"	e	enum:__anon3
INSERT	FW_Inc.h	29;"	d
ITEM1	__st_sample.h	/^    ITEM1,$/;"	e	enum:__anon1
ITEM2	__st_sample.h	/^    ITEM2,$/;"	e	enum:__anon1
ITEM3	__st_sample.h	/^    ITEM3,$/;"	e	enum:__anon1
ITEM4	__st_sample.h	/^    ITEM4,$/;"	e	enum:__anon1
ITEM5	__st_sample.h	/^    ITEM5,$/;"	e	enum:__anon1
ITEM6	__st_sample.h	/^    ITEM6,$/;"	e	enum:__anon1
ITEM7	__st_sample.h	/^    ITEM7,$/;"	e	enum:__anon1
ITEM8	__st_sample.h	/^    ITEM8,$/;"	e	enum:__anon1
ITEM9	__st_sample.h	/^    ITEM9,$/;"	e	enum:__anon1
InitPreparedStatement	FW_Server.c	/^int InitPreparedStatement()$/;"	f
Insert	FW_Client.c	/^int Insert( struct REQUEST_s *ptRequest )$/;"	f
Insert	FW_Server.c	/^int Insert( struct REQUEST_s *ptRequest )$/;"	f
JOBTITLE	FW_Inc.h	48;"	d
MCFLAGS	Makefile	/^MCFLAGS=-g -W -Wall$/;"	m
MDEFS	Makefile	/^MDEFS=-D_USE_STAT -D_LOCAL_DB -D_HANGUP_ALARM$/;"	m
MINCLUDES	Makefile	/^MINCLUDES=-I$(TELCOBASE_HOME)\/include$/;"	m
MLDFLAGS	Makefile	/^MLDFLAGS=$/;"	m
MLIBDIRS	Makefile	/^MLIBDIRS=-L$(TELCOBASE_HOME)\/lib $/;"	m
MLIBS	Makefile	/^MLIBS= -ltelcobase -lstctl -lmplib -ltap -ltelpro -loam$/;"	m
MPGLOG_FAIL	FW_Inc.h	/^	NULL_FAIL = -5, MPGLOG_FAIL = -6, STAT_FAIL = -7,$/;"	e	enum:__anon3
MSG_TYPE	FW_Inc.h	44;"	d
NAME	FW_Inc.h	47;"	d
NAME_NOT_EXIST	FW_Inc.h	/^	ID_NOT_EXIST = 30, NAME_NOT_EXIST = 31,$/;"	e	enum:__anon3
NULL_FAIL	FW_Inc.h	/^	NULL_FAIL = -5, MPGLOG_FAIL = -6, STAT_FAIL = -7,$/;"	e	enum:__anon3
NUMTUPLES	FW_Inc.h	33;"	d
PHONE	FW_Inc.h	50;"	d
REQUEST_s	FW_Inc.h	/^typedef struct REQUEST_s$/;"	s
REQUEST_t	FW_Inc.h	/^} REQUEST_t;$/;"	t	typeref:struct:REQUEST_s
RESPONSE_s	FW_Inc.h	/^typedef struct RESPONSE_s$/;"	s
RESPONSE_t	FW_Inc.h	/^} RESPONSE_t;$/;"	t	typeref:struct:RESPONSE_s
RET_CODE_INVALID_PARAMETER	test_stat.h	/^    RET_CODE_INVALID_PARAMETER,$/;"	e	enum:__anon2
RET_CODE_SUCCESS	test_stat.h	/^    RET_CODE_SUCCESS,$/;"	e	enum:__anon2
RET_CODE_SYSTEM_FAIL	test_stat.h	/^    RET_CODE_SYSTEM_FAIL,$/;"	e	enum:__anon2
RET_CODE_UNKNOWN_USER	test_stat.h	/^    RET_CODE_UNKNOWN_USER,$/;"	e	enum:__anon2
ReturnCode_t	FW_Inc.h	/^} ReturnCode_t;$/;"	t	typeref:enum:__anon3
SELECT	FW_Inc.h	30;"	d
SELECT_ALL_s	FW_Inc.h	/^typedef struct SELECT_ALL_s$/;"	s
SELECT_ALL_t	FW_Inc.h	/^} SELECT_ALL_t;$/;"	t	typeref:struct:SELECT_ALL_s
SELECT_ONE_s	FW_Inc.h	/^typedef struct SELECT_ONE_s$/;"	s
SELECT_ONE_t	FW_Inc.h	/^} SELECT_ONE_t;$/;"	t	typeref:struct:SELECT_ONE_s
SERVER_PROCNAME	FW_Inc.h	26;"	d
SIZE_JOBTITLE	FW_Inc.h	39;"	d
SIZE_NAME	FW_Inc.h	38;"	d
SIZE_PHONE	FW_Inc.h	41;"	d
SIZE_TEAM	FW_Inc.h	40;"	d
SRCS	Makefile	/^SRCS=	 test_stat.c FW_Server.c$/;"	m
STATMIPCSVR	test_stat.h	10;"	d
STAT_FAIL	FW_Inc.h	/^	NULL_FAIL = -5, MPGLOG_FAIL = -6, STAT_FAIL = -7,$/;"	e	enum:__anon3
STAT_STYPE_MIPCSVR	test_stat.h	9;"	d
SUCCESS	FW_Inc.h	/^	SUCCESS = 1, INPUT_FAIL = 2,$/;"	e	enum:__anon3
Select	FW_Client.c	/^int Select( struct REQUEST_s *ptRequest )$/;"	f
SelectAll	FW_Server.c	/^int SelectAll( struct RESPONSE_s *ptResponse )$/;"	f
SelectOne	FW_Server.c	/^int SelectOne( struct REQUEST_s *ptRequest, struct RESPONSE_s *ptResponse )$/;"	f
SignalHandler	FW_Client.c	/^void SignalHandler( int nSig )$/;"	f
SignalHandler	FW_Server.c	/^void SignalHandler( int nSig )$/;"	f
TABLE_NAME	FW_Inc.h	43;"	d
TAP_FAIL	FW_Inc.h	/^	DAL_FAIL = -2, FGETS_FAIL = -3, TAP_FAIL = -4,$/;"	e	enum:__anon3
TCP_RCV_TOTAL_INV	test_stat.h	/^    TCP_RCV_TOTAL_INV,$/;"	e	enum:__anon2
TEAM	FW_Inc.h	49;"	d
UDA_FAIL	FW_Inc.h	/^	UDA_FAIL = -8$/;"	e	enum:__anon3
UDA_ITEM_NAME	FW_Inc.h	54;"	d
UDA_LOW_GNAME	FW_Inc.h	53;"	d
UDA_UPP_GNAME	FW_Inc.h	52;"	d
UPDATE	FW_Inc.h	31;"	d
Update	FW_Client.c	/^int Update( struct REQUEST_s *ptRequest )$/;"	f
Update	FW_Server.c	/^int Update( struct REQUEST_s *ptRequest )$/;"	f
_FW_INC_H_	FW_Inc.h	3;"	d
__ITEM_END__	__st_sample.h	/^    __ITEM_END__$/;"	e	enum:__anon1
__ITEM_END__	test_stat.h	/^    __ITEM_END__$/;"	e	enum:__anon2
____st_sample_H__	__st_sample.h	3;"	d
__test_stat_H__	test_stat.h	3;"	d
en_item_index_t	__st_sample.h	/^}en_item_index_t;$/;"	t	typeref:enum:__anon1
en_item_index_t	test_stat.h	/^}en_item_index_t;$/;"	t	typeref:enum:__anon2
g_nFlag	FW_Inc.h	/^int g_nFlag = FLAG_RUN;$/;"	v
g_ptConn	FW_Inc.h	/^DAL_CONN	*g_ptConn= NULL;$/;"	v
g_ptPstmtDelete	FW_Inc.h	/^DAL_PSTMT	*g_ptPstmtDelete = NULL;$/;"	v
g_ptPstmtInsert	FW_Inc.h	/^DAL_PSTMT	*g_ptPstmtInsert = NULL;$/;"	v
g_ptPstmtNumtuples	FW_Inc.h	/^DAL_PSTMT	*g_ptPstmtNumtuples = NULL;$/;"	v
g_ptPstmtSelectAll	FW_Inc.h	/^DAL_PSTMT	*g_ptPstmtSelectAll = NULL;$/;"	v
g_ptPstmtSelectOneById	FW_Inc.h	/^DAL_PSTMT	*g_ptPstmtSelectOneById = NULL;$/;"	v
g_ptPstmtSelectOneByName	FW_Inc.h	/^DAL_PSTMT	*g_ptPstmtSelectOneByName = NULL;$/;"	v
g_ptPstmtUpdate	FW_Inc.h	/^DAL_PSTMT	*g_ptPstmtUpdate = NULL;$/;"	v
main	FW_Client.c	/^int main( int argc, char *argv[] )$/;"	f
main	FW_Server.c	/^int main( int argc, char *argv[] )$/;"	f
nCntSelectAll	FW_Inc.h	/^	int		nCntSelectAll;$/;"	m	struct:RESPONSE_s
nId	FW_Inc.h	/^	int		nId;$/;"	m	struct:REQUEST_s
nId	FW_Inc.h	/^	int		nId;$/;"	m	struct:RESPONSE_s
nId	FW_Inc.h	/^	int		nId;$/;"	m	struct:SELECT_ALL_s
nMsgType	FW_Inc.h	/^	int		nMsgType;$/;"	m	struct:REQUEST_s
nMsgType	FW_Inc.h	/^	int		nMsgType;$/;"	m	struct:RESPONSE_s
nResult	FW_Inc.h	/^	int		nResult;$/;"	m	struct:RESPONSE_s
stctl_dtl_type_list	test_stat.c	/^stctl_dtl_type_desc_t stctl_dtl_type_list[] = {$/;"	v
stctl_item_list	__st_sample.c	/^stctl_item_desc_t stctl_item_list[] = {$/;"	v
stctl_item_list	test_stat.c	/^stctl_item_desc_t stctl_item_list[] = {$/;"	v
szBuffer	FW_Inc.h	/^	char	szBuffer	[2048];$/;"	m	struct:RESPONSE_s
szJobTitle	FW_Inc.h	/^	char	szJobTitle	[SIZE_JOBTITLE + 1];$/;"	m	struct:REQUEST_s
szJobTitle	FW_Inc.h	/^	char	szJobTitle	[SIZE_JOBTITLE + 1];$/;"	m	struct:SELECT_ONE_s
szName	FW_Inc.h	/^	char	szName		[SIZE_NAME + 1];$/;"	m	struct:REQUEST_s
szName	FW_Inc.h	/^	char	szName		[SIZE_NAME + 1];$/;"	m	struct:SELECT_ALL_s
szName	FW_Inc.h	/^	char	szName		[SIZE_NAME + 1];$/;"	m	struct:SELECT_ONE_s
szPhone	FW_Inc.h	/^	char	szPhone		[SIZE_PHONE + 1];$/;"	m	struct:REQUEST_s
szPhone	FW_Inc.h	/^	char	szPhone		[SIZE_PHONE + 1];$/;"	m	struct:SELECT_ONE_s
szTeam	FW_Inc.h	/^	char	szTeam		[SIZE_TEAM + 1];$/;"	m	struct:REQUEST_s
szTeam	FW_Inc.h	/^	char	szTeam		[SIZE_TEAM + 1];$/;"	m	struct:SELECT_ONE_s
