# log_mode 
#	0x001:LOG_MODE_DAILY (각 파일의 구분 단위를 하루(DAILY) 로 지정)
#	0x002:LOG_MODE_HOURLY (각 파일의 구분 단위를 매 시간(HOURLY) 로 지정)
#	0x004:LOG_MODE_FILE_LINE (각 로그행마다, 로그를 찍은 소스 파일명과 행값을 포함)
#	0x008:LOG_MODE_THR_ID ((현재 미구현) 각 로그행마다, 로그를 호출한 thread 를 구별할 수 있는 정보를 포함)
#	0x010:LOG_MODE_LEVEL_TAG (각 로그행마다, 출력에 사용된 log 명령에서 지정한 로그레벨 정보를 포함)
#	0x020:LOG_MODE_NO_MODULE (각 로그행의 prefix에서 module name 출력 부분을 생략한 형태로 출력)
#	0x040:LOG_MODE_NO_DATE (각 로그행의 prefix에서 시간표시의 날짜부분 생략한 형태로 출력)
#	0x080:LOG_MODE_REDIRECT_STDERR (stderr 의 출력내용을 로그파일로 저장)
#	0x100:LOG_MODE_REDIRECT_STDOUT (stdout 의 출력내용을 로그파일로 저장)
[COMMON]
call_thr_cnt=8			# call processing thread 갯수, 최대 8개 생성 가능
atipc_thr_cnt= 1		# 동일 채널에 atipc_recv thread를 개수 (여러개 가능한지 확인 필요) 
log_level=3				# 1:LOG_ERR | 2:LOG_SVC | 3:LOG_DBG
log_mode=0x1F1			# 출력 형식을 설정, 각 mod를 bitwise-OR 한 값을 사용
max_simul_call=65535	# 최대 동시 호 수
thread_start_msec=1000  # Thread 기동 대기 시간 (MSEC)
thread_stop_msec=300    # Thread 종료 대기 시간 (MSEC)
mpq_append_retry=1      # mpq full에 의한 mpq_append 실패 시, retry 수




# [CALL]
# call processing thread가 지원하는 initial message Id 등록
# 최대 64개의 initial message Id 등록 가능
# hexa type으로 설정
[CALL_THR]
1=0x1001		
#2=0x2103
#3=
#4=
#5=





# [NON_CALL_THR]
# non-call processing thread가 지원하는 thread description 등록
# 최대 8개의 thread description 등록 가능
[NON_CALL_THR]
#1="MMC"
#2="WATCHDOG"
#3=


# [NON_CALL_THR_DESC]
# 각 non-call processing thread가 지원하는 initial message Id 등록
# 최대 64개의 initial message Id 등록 가능
# hexa type으로 설정
[MMC]
1=0x3000
2=0x3001
3=0x3002
#4=

[WATCHDOG]
#1=0x2000
#2=
#3=

[LDAP]
search_object_cnt=1
mod_object_cnt=1
mod_object_class1=EpsAuth

[LDAP_QoS]
control_type=1.3.6.1.4.1.15573.1.2.1.4
# true(1) false(0)
criticality=0
ldap_qos_cnt=2
qos1_value=Medium
qos1_desc=search
qos2_value=High
qos2_desc=modify

[LDAP_SEARCH_OBJECT1]
filter_cnt=1
# &(1) |(2) !(3) =(4) substrins(5)
# >=(6) <=(7) present(8) approx(9)
#extensible(10)
filter1_type=8
filter1_attr_desc=objectclass
filter1_assert_value=*
filter1_match_rule=
# true(1) false(0)
filter1_dn_attr=
# initial(1) any(2) final(3)
filter1_substrig_type=1
filter1_substring=
# true(1) false(0)
filter1_last_opponent=1
base_object=IoTHSS


# [SET] 
# 블록 로직에 필요한 정보 
[SET]
amf = 1111      ; string
sqn_range = 10000
sqn_len_index = 5
sqn_not_time_diff = 128
sqn_array_count = 5
lte_start_idx = 10      ; LTE 인증 시 사용하는 USIM의 SQN Start Array Index (EpsAuthTble의 sqnIdx가 이걸 나타내는지 확인 필요)
lte_end_idx = 14        ; LTE 인증 시 사용하는 USIM의 SQN End Array Index

