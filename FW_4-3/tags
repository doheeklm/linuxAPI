!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DAL_FAIL	FW_Inc.h	/^	SUCCESS = 1, INPUT_FAIL = 2, DAL_FAIL = -2,$/;"	e	enum:__anon3
DELETE	FW_Inc.h	37;"	d
ENUM_ID	FW_Inc.h	74;"	d
ENUM_NAME	FW_Inc.h	75;"	d
ENUM_PHONE	FW_Inc.h	78;"	d
ENUM_POSITION	FW_Inc.h	76;"	d
ENUM_TEAM	FW_Inc.h	77;"	d
EXENAME	Makefile	/^EXENAME=	server$/;"	m
FGETS_FAIL	FW_Inc.h	/^	FGETS_FAIL = -3, IPC_FAIL = -4, NULL_FAIL = -5,$/;"	e	enum:__anon3
FLAG_RUN	FW_Inc.h	40;"	d
FLAG_STOP	FW_Inc.h	41;"	d
ID	FW_Inc.h	49;"	d
ID_NOT_EXIST	FW_Inc.h	/^	ID_NOT_EXIST = 30, NAME_NOT_EXIST = 31,$/;"	e	enum:__anon3
INPUT_FAIL	FW_Inc.h	/^	SUCCESS = 1, INPUT_FAIL = 2, DAL_FAIL = -2,$/;"	e	enum:__anon3
INSERT	FW_Inc.h	34;"	d
IPC_FAIL	FW_Inc.h	/^	FGETS_FAIL = -3, IPC_FAIL = -4, NULL_FAIL = -5,$/;"	e	enum:__anon3
IPC_Handler	FW_Server.c	/^int IPC_Handler( mpipc_t *ptMpipc, iipc_msg_t *ptIpcMsg, void *pvData )$/;"	f
IPC_Handler	FW_Server_addStatNAlarm.c	/^int IPC_Handler( mpipc_t *ptMpipc, iipc_msg_t *ptIpcMsg, void *pvData )$/;"	f
ITEM1	__st_sample.h	/^    ITEM1,$/;"	e	enum:__anon1
ITEM2	__st_sample.h	/^    ITEM2,$/;"	e	enum:__anon1
ITEM3	__st_sample.h	/^    ITEM3,$/;"	e	enum:__anon1
ITEM4	__st_sample.h	/^    ITEM4,$/;"	e	enum:__anon1
ITEM5	__st_sample.h	/^    ITEM5,$/;"	e	enum:__anon1
ITEM6	__st_sample.h	/^    ITEM6,$/;"	e	enum:__anon1
ITEM7	__st_sample.h	/^    ITEM7,$/;"	e	enum:__anon1
ITEM8	__st_sample.h	/^    ITEM8,$/;"	e	enum:__anon1
ITEM9	__st_sample.h	/^    ITEM9,$/;"	e	enum:__anon1
MCFLAGS	Makefile	/^MCFLAGS=-g -W -Wall$/;"	m
MDEFS	Makefile	/^MDEFS=-D_USE_STAT -D_LOCAL_DB -D_HANGUP_ALARM$/;"	m
MINCLUDES	Makefile	/^MINCLUDES=-I$(TELCOBASE_HOME)\/include$/;"	m
MLDFLAGS	Makefile	/^MLDFLAGS=$/;"	m
MLIBDIRS	Makefile	/^MLIBDIRS=-L$(TELCOBASE_HOME)\/lib $/;"	m
MLIBS	Makefile	/^MLIBS= -ltelcobase -lstctl -lmplib -ltap -ltelpro -loam$/;"	m
MMC_Destroy	FW_Server.c	/^void MMC_Destroy( oammmc_t *ptOammmc )$/;"	f
MMC_Destroy	FW_Server_addStatNAlarm.c	/^void MMC_Destroy( oammmc_t *ptOammmc )$/;"	f
MMC_FAIL	FW_Inc.h	/^	UDA_FAIL = -8, MMC_FAIL = -9, MPCONF_FAIL = -10,$/;"	e	enum:__anon3
MMC_Handler_Add	FW_Server.c	/^int MMC_Handler_Add( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd, oammmc_arg_t *ptArgList, int nArg, void *ptUarg )$/;"	f
MMC_Handler_Add	FW_Server_addStatNAlarm.c	/^int MMC_Handler_Add( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd, oammmc_arg_t *ptArgList, int nArg, void *ptUarg )$/;"	f
MMC_Handler_Chg	FW_Server.c	/^int MMC_Handler_Chg( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd, oammmc_arg_t *ptArgList, int nArg, void *ptUarg )$/;"	f
MMC_Handler_Chg	FW_Server_addStatNAlarm.c	/^int MMC_Handler_Chg( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd, oammmc_arg_t *ptArgList, int nArg, void *ptUarg )$/;"	f
MMC_Handler_Del	FW_Server.c	/^int MMC_Handler_Del( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd, oammmc_arg_t *ptArgList, int nArg, void *ptUarg )$/;"	f
MMC_Handler_Del	FW_Server_addStatNAlarm.c	/^int MMC_Handler_Del( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd, oammmc_arg_t *ptArgList, int nArg, void *ptUarg )$/;"	f
MMC_Handler_Dis	FW_Server.c	/^int MMC_Handler_Dis( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd, oammmc_arg_t *ptArgList, int nArg, void *ptUarg )$/;"	f
MMC_Handler_Dis	FW_Server_addStatNAlarm.c	/^int MMC_Handler_Dis( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd, oammmc_arg_t *ptArgList, int nArg, void *ptUarg )$/;"	f
MMC_Init	FW_Server.c	/^int MMC_Init( char *pszModule, oammmc_t *ptOammmc, mpipc_t *ptMpipc )$/;"	f
MMC_Init	FW_Server_addStatNAlarm.c	/^int MMC_Init( char *pszModule, oammmc_t *ptOammmc, mpipc_t *ptMpipc )$/;"	f
MML_ENABLE	FW_Inc.h	62;"	d
MMT_CONN_MAX	FW_Inc.h	63;"	d
MMT_ENABLE	FW_Inc.h	61;"	d
MMT_IS_QUIET	FW_Inc.h	65;"	d
MMT_LOCAL_ONLY	FW_Inc.h	64;"	d
MMT_PORT	FW_Inc.h	60;"	d
MODULE	FW_Inc.h	32;"	d
MPCONF_FAIL	FW_Inc.h	/^	UDA_FAIL = -8, MMC_FAIL = -9, MPCONF_FAIL = -10,$/;"	e	enum:__anon3
MPGLOG_FAIL	FW_Inc.h	/^	MPGLOG_FAIL = -6, STAT_FAIL = -7,$/;"	e	enum:__anon3
MSG_ID_ADD	FW_Inc.h	68;"	d
MSG_ID_CHG	FW_Inc.h	70;"	d
MSG_ID_DEL	FW_Inc.h	71;"	d
MSG_ID_DIS	FW_Inc.h	69;"	d
NAME	FW_Inc.h	50;"	d
NAME_NOT_EXIST	FW_Inc.h	/^	ID_NOT_EXIST = 30, NAME_NOT_EXIST = 31,$/;"	e	enum:__anon3
NULL_FAIL	FW_Inc.h	/^	FGETS_FAIL = -3, IPC_FAIL = -4, NULL_FAIL = -5,$/;"	e	enum:__anon3
NUMTUPLES	FW_Inc.h	38;"	d
PHONE	FW_Inc.h	53;"	d
POSITION	FW_Inc.h	51;"	d
PROCESS_INI	FW_Inc.h	59;"	d
PSTMT_Destroy	FW_Server.c	/^void PSTMT_Destroy()$/;"	f
PSTMT_Destroy	FW_Server_addStatNAlarm.c	/^void PSTMT_Destroy()$/;"	f
PSTMT_GetOldData	FW_Server.c	/^int PSTMT_GetOldData( int nId, char *pszAttribute, char *pszOldData, int nSizeOldData )$/;"	f
PSTMT_GetOldData	FW_Server_addStatNAlarm.c	/^int PSTMT_GetOldData( int nId, char *pszAttribute, char *pszOldData, int nSizeOldData )$/;"	f
PSTMT_Init	FW_Server.c	/^int PSTMT_Init()$/;"	f
PSTMT_Init	FW_Server_addStatNAlarm.c	/^int PSTMT_Init()$/;"	f
RET_CODE_INVALID_PARAMETER	test_stat.h	/^    RET_CODE_INVALID_PARAMETER,$/;"	e	enum:__anon2
RET_CODE_SUCCESS	test_stat.h	/^    RET_CODE_SUCCESS,$/;"	e	enum:__anon2
RET_CODE_SYSTEM_FAIL	test_stat.h	/^    RET_CODE_SYSTEM_FAIL,$/;"	e	enum:__anon2
RET_CODE_UNKNOWN_USER	test_stat.h	/^    RET_CODE_UNKNOWN_USER,$/;"	e	enum:__anon2
ReturnCode_t	FW_Inc.h	/^} ReturnCode_t;$/;"	t	typeref:enum:__anon3
SELECT	FW_Inc.h	35;"	d
SIZE_NAME	FW_Inc.h	43;"	d
SIZE_PHONE	FW_Inc.h	46;"	d
SIZE_POSITION	FW_Inc.h	44;"	d
SIZE_TEAM	FW_Inc.h	45;"	d
SRCS	Makefile	/^SRCS=	 test_stat.c FW_Server.c$/;"	m
STATMIPCSVR	test_stat.h	10;"	d
STAT_FAIL	FW_Inc.h	/^	MPGLOG_FAIL = -6, STAT_FAIL = -7,$/;"	e	enum:__anon3
STAT_STYPE_MIPCSVR	test_stat.h	9;"	d
SUCCESS	FW_Inc.h	/^	SUCCESS = 1, INPUT_FAIL = 2, DAL_FAIL = -2,$/;"	e	enum:__anon3
SYSTEM_FAIL	FW_Inc.h	/^	SYSTEM_FAIL = -11$/;"	e	enum:__anon3
SignalHandler	FW_Server.c	/^void SignalHandler( int nSig )$/;"	f
SignalHandler	FW_Server_addStatNAlarm.c	/^void SignalHandler( int nSig )$/;"	f
TABLE_NAME	FW_Inc.h	48;"	d
TCP_RCV_TOTAL_INV	test_stat.h	/^    TCP_RCV_TOTAL_INV,$/;"	e	enum:__anon2
TEAM	FW_Inc.h	52;"	d
UDA_FAIL	FW_Inc.h	/^	UDA_FAIL = -8, MMC_FAIL = -9, MPCONF_FAIL = -10,$/;"	e	enum:__anon3
UDA_ITEM_NAME	FW_Inc.h	57;"	d
UDA_LOW_GNAME	FW_Inc.h	56;"	d
UDA_UPP_GNAME	FW_Inc.h	55;"	d
UPDATE	FW_Inc.h	36;"	d
_FW_INC_H_	FW_Inc.h	3;"	d
__ITEM_END__	__st_sample.h	/^    __ITEM_END__$/;"	e	enum:__anon1
__ITEM_END__	test_stat.h	/^    __ITEM_END__$/;"	e	enum:__anon2
____st_sample_H__	__st_sample.h	3;"	d
__test_stat_H__	test_stat.h	3;"	d
atArgsAdd	FW_Inc.h	/^oammmc_arg_info_t atArgsAdd[] =$/;"	v
atArgsChg	FW_Inc.h	/^oammmc_arg_info_t atArgsChg[] =$/;"	v
atArgsDel	FW_Inc.h	/^oammmc_arg_info_t atArgsDel[] =$/;"	v
atArgsDis	FW_Inc.h	/^oammmc_arg_info_t atArgsDis[] =$/;"	v
en_item_index_t	__st_sample.h	/^}en_item_index_t;$/;"	t	typeref:enum:__anon1
en_item_index_t	test_stat.h	/^}en_item_index_t;$/;"	t	typeref:enum:__anon2
g_nFlag	FW_Inc.h	/^int g_nFlag = FLAG_RUN;$/;"	v
g_ptDalConn	FW_Inc.h	/^DAL_CONN *g_ptDalConn = NULL;$/;"	v
g_ptPstmtDelete	FW_Inc.h	/^DAL_PSTMT *g_ptPstmtDelete = NULL;$/;"	v
g_ptPstmtInsert	FW_Inc.h	/^DAL_PSTMT *g_ptPstmtInsert = NULL;$/;"	v
g_ptPstmtNumTuples	FW_Inc.h	/^DAL_PSTMT *g_ptPstmtNumTuples = NULL;$/;"	v
g_ptPstmtSelectAll	FW_Inc.h	/^DAL_PSTMT *g_ptPstmtSelectAll = NULL;$/;"	v
g_ptPstmtSelectOne	FW_Inc.h	/^DAL_PSTMT *g_ptPstmtSelectOne = NULL;$/;"	v
g_ptPstmtUpdate	FW_Inc.h	/^DAL_PSTMT *g_ptPstmtUpdate = NULL;$/;"	v
main	FW_Server.c	/^int main( int argc, char *argv[] )$/;"	f
main	FW_Server_addStatNAlarm.c	/^int main( int argc, char *argv[] )$/;"	f
stctl_dtl_type_list	test_stat.c	/^stctl_dtl_type_desc_t stctl_dtl_type_list[] = {$/;"	v
stctl_item_list	__st_sample.c	/^stctl_item_desc_t stctl_item_list[] = {$/;"	v
stctl_item_list	test_stat.c	/^stctl_item_desc_t stctl_item_list[] = {$/;"	v
tCommandTable	FW_Server.c	/^oammmc_cmd_t tCommandTable[] =$/;"	v
tCommandTable	FW_Server_addStatNAlarm.c	/^oammmc_cmd_t tCommandTable[] =$/;"	v
