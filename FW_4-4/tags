!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CLIENT_DELETE_FAIL	FW_Header.h	/^	CLIENT_DELETE_FAIL		= -19,$/;"	e	enum:__anon3
CLIENT_DELETE_SUCCESS	FW_Header.h	/^	CLIENT_DELETE_SUCCESS	= 5,$/;"	e	enum:__anon3
CLIENT_INSERT_FAIL	FW_Header.h	/^	CLIENT_INSERT_FAIL		= -16,$/;"	e	enum:__anon3
CLIENT_INSERT_SUCCESS	FW_Header.h	/^	CLIENT_INSERT_SUCCESS	= 2,$/;"	e	enum:__anon3
CLIENT_SELECT_FAIL	FW_Header.h	/^	CLIENT_SELECT_FAIL		= -17,$/;"	e	enum:__anon3
CLIENT_SELECT_SUCCESS	FW_Header.h	/^	CLIENT_SELECT_SUCCESS	= 3,$/;"	e	enum:__anon3
CLIENT_UPDATE_FAIL	FW_Header.h	/^	CLIENT_UPDATE_FAIL 		= -18,$/;"	e	enum:__anon3
CLIENT_UPDATE_SUCCESS	FW_Header.h	/^	CLIENT_UPDATE_SUCCESS	= 4,$/;"	e	enum:__anon3
CONF_ITEM_NAME_IP	FW_Header.h	88;"	d
CONF_ITEM_NAME_PORT	FW_Header.h	89;"	d
CONF_PATH	FW_Header.h	86;"	d
CONF_SECTION_NAME	FW_Header.h	87;"	d
ClearStdin	FW_Client.c	/^void ClearStdin( char *pszTemp )$/;"	f
DAL_EXEC_ZERO	FW_Header.h	/^	DAL_EXEC_ZERO			= -1,$/;"	e	enum:__anon3
DAL_FAIL	FW_Header.h	/^	DAL_FAIL				= -2,$/;"	e	enum:__anon3
DB_CheckDuplicate	FW_DB.c	/^int DB_CheckDuplicate( char *pszPhone )$/;"	f
DB_Delete	FW_DB.c	/^int DB_Delete( struct REQUEST_s *ptRequestFromClient )$/;"	f
DB_FAIL	FW_Header.h	/^	DB_FAIL					= -4,$/;"	e	enum:__anon3
DB_Insert	FW_DB.c	/^int DB_Insert( struct REQUEST_s *ptRequestFromClient )$/;"	f
DB_Select	FW_DB.c	/^int DB_Select( struct REQUEST_s *ptRequestFromClient, struct RESPONSE_s *ptResponseToClient )$/;"	f
DB_Update	FW_DB.c	/^int DB_Update( struct REQUEST_s *ptRequestFromClient )$/;"	f
DELETE	FW_Header.h	43;"	d
DELIM	FW_Header.h	126;"	d
Delete	FW_Client.c	/^int Delete( struct REQUEST_s *ptRequestToServer )$/;"	f
EMPL_ID	FW_Header.h	113;"	d
EMPL_ID_ID	FW_Header.h	114;"	d
EMPL_NAME	FW_Header.h	115;"	d
EMPL_NAME_ID	FW_Header.h	116;"	d
EMPL_PHONE	FW_Header.h	121;"	d
EMPL_PHONE_ID	FW_Header.h	122;"	d
EMPL_POSITION	FW_Header.h	117;"	d
EMPL_POSITION_ID	FW_Header.h	118;"	d
EMPL_TEAM	FW_Header.h	119;"	d
EMPL_TEAM_ID	FW_Header.h	120;"	d
EMPL_TRC_NUM	FW_Header.h	123;"	d
EMPL_TRC_NUM_ID	FW_Header.h	124;"	d
EXENAME	Makefile	/^EXENAME=	server$/;"	m
FLAG_RUN	FW_Header.h	54;"	d
FLAG_STOP	FW_Header.h	55;"	d
INPUT_FAIL	FW_Header.h	/^	INPUT_FAIL				= -3,$/;"	e	enum:__anon3
INPUT_MENU_FAIL	FW_Header.h	/^	INPUT_MENU_FAIL			= -15,$/;"	e	enum:__anon3
INSERT	FW_Header.h	40;"	d
IPC_Destroy	FW_Ipc.c	/^void IPC_Destroy( mpipc_t *ptMpipc )$/;"	f
IPC_FAIL	FW_Header.h	/^	IPC_FAIL				= -5,$/;"	e	enum:__anon3
IPC_Handler	FW_Ipc.c	/^int IPC_Handler( mpipc_t *ptMpipc, iipc_msg_t *ptRecvMsg, void *pvData )$/;"	f
ITEM1	__st_sample.h	/^    ITEM1,$/;"	e	enum:__anon1
ITEM2	__st_sample.h	/^    ITEM2,$/;"	e	enum:__anon1
ITEM3	__st_sample.h	/^    ITEM3,$/;"	e	enum:__anon1
ITEM4	__st_sample.h	/^    ITEM4,$/;"	e	enum:__anon1
ITEM5	__st_sample.h	/^    ITEM5,$/;"	e	enum:__anon1
ITEM6	__st_sample.h	/^    ITEM6,$/;"	e	enum:__anon1
ITEM7	__st_sample.h	/^    ITEM7,$/;"	e	enum:__anon1
ITEM8	__st_sample.h	/^    ITEM8,$/;"	e	enum:__anon1
ITEM9	__st_sample.h	/^    ITEM9,$/;"	e	enum:__anon1
Insert	FW_Client.c	/^int Insert( struct REQUEST_s *ptRequestToServer )$/;"	f
MCFLAGS	Makefile	/^MCFLAGS=-g -W -Wall$/;"	m
MDEFS	Makefile	/^MDEFS=-D_USE_STAT -D_LOCAL_DB -D_HANGUP_ALARM$/;"	m
MINCLUDES	Makefile	/^MINCLUDES=-I$(TELCOBASE_HOME)\/include$/;"	m
MLDFLAGS	Makefile	/^MLDFLAGS=$/;"	m
MLIBDIRS	Makefile	/^MLIBDIRS=-L$(TELCOBASE_HOME)\/lib $/;"	m
MLIBS	Makefile	/^MLIBS= -ltelcobase -lstctl -lmplib -ltap -ltelpro -loam$/;"	m
MMC_ADD_INFO	FW_Header.h	97;"	d
MMC_ADD_INFO_ID	FW_Header.h	98;"	d
MMC_ADD_TRC	FW_Header.h	105;"	d
MMC_ADD_TRC_ID	FW_Header.h	106;"	d
MMC_CHG_INFO	FW_Header.h	101;"	d
MMC_CHG_INFO_ID	FW_Header.h	102;"	d
MMC_DEL_INFO	FW_Header.h	103;"	d
MMC_DEL_INFO_ID	FW_Header.h	104;"	d
MMC_DEL_TRC	FW_Header.h	109;"	d
MMC_DEL_TRC_ID	FW_Header.h	110;"	d
MMC_DIS_INFO	FW_Header.h	99;"	d
MMC_DIS_INFO_ID	FW_Header.h	100;"	d
MMC_DIS_TRC	FW_Header.h	107;"	d
MMC_DIS_TRC_ID	FW_Header.h	108;"	d
MMC_Destroy	FW_Mmc.c	/^void MMC_Destroy( oammmc_t *ptOammmc )$/;"	f
MMC_HANDLER_FAIL	FW_Header.h	/^	MMC_HANDLER_FAIL		= -13,$/;"	e	enum:__anon3
MMC_HANDLER_SUCCESS	FW_Header.h	/^	MMC_HANDLER_SUCCESS		= 0,	\/\/Must be 0$/;"	e	enum:__anon3
MMC_Handler_Add	FW_Mmc.c	/^int MMC_Handler_Add( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd,$/;"	f
MMC_Handler_AddTrace	FW_Mmc.c	/^int MMC_Handler_AddTrace( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd,$/;"	f
MMC_Handler_Chg	FW_Mmc.c	/^int MMC_Handler_Chg( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd,$/;"	f
MMC_Handler_Del	FW_Mmc.c	/^int MMC_Handler_Del( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd,$/;"	f
MMC_Handler_DelTrace	FW_Mmc.c	/^int MMC_Handler_DelTrace( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd,$/;"	f
MMC_Handler_Dis	FW_Mmc.c	/^int MMC_Handler_Dis( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd,$/;"	f
MMC_Handler_DisTrace	FW_Mmc.c	/^int MMC_Handler_DisTrace( oammmc_t *ptOammmc, oammmc_cmd_t *ptCmd,$/;"	f
MMC_Init	FW_Mmc.c	/^int MMC_Init( char *pszModule, oammmc_t *ptOammmc, mpipc_t *ptMpipc )$/;"	f
MML_ENABLE	FW_Header.h	80;"	d
MMT_CONN_MAX	FW_Header.h	81;"	d
MMT_ENABLE	FW_Header.h	79;"	d
MMT_IS_QUIET	FW_Header.h	83;"	d
MMT_LOCAL_ONLY	FW_Header.h	82;"	d
MMT_PORT	FW_Header.h	78;"	d
MPCONF_FAIL	FW_Header.h	/^	MPCONF_FAIL				= -11,$/;"	e	enum:__anon3
MPGLOG_FAIL	FW_Header.h	/^	MPGLOG_FAIL				= -7,$/;"	e	enum:__anon3
MTYPE_DELETE	FW_Header.h	51;"	d
MTYPE_INSERT	FW_Header.h	47;"	d
MTYPE_SELECTALL	FW_Header.h	48;"	d
MTYPE_SELECTONE	FW_Header.h	49;"	d
MTYPE_UPDATE	FW_Header.h	50;"	d
NULL_FAIL	FW_Header.h	/^	NULL_FAIL				= -6,$/;"	e	enum:__anon3
NUMTUPLES	FW_Header.h	44;"	d
OAMMMC_FAIL	FW_Header.h	/^	OAMMMC_FAIL				= -10,$/;"	e	enum:__anon3
PROCESS_INI	FW_Header.h	77;"	d
PROCNAME_CLIENT	FW_Header.h	38;"	d
PROCNAME_SERVER	FW_Header.h	37;"	d
PSTMT_Destroy	FW_Pstmt.c	/^void PSTMT_Destroy()$/;"	f
PSTMT_Init	FW_Pstmt.c	/^int PSTMT_Init()$/;"	f
RC_FAIL	FW_Header.h	/^	RC_FAIL					= -14,$/;"	e	enum:__anon3
RC_SUCCESS	FW_Header.h	/^	RC_SUCCESS				= 1,$/;"	e	enum:__anon3
REGI_CheckKey	FW_Regi.c	/^int REGI_CheckKey( char* pszKey )$/;"	f
REGI_FAIL	FW_Header.h	/^	REGI_FAIL				= -20$/;"	e	enum:__anon3
REGI_KEY_DIR	FW_Header.h	92;"	d
REGI_KEY_EXIST	FW_Header.h	/^	REGI_KEY_EXIST			= 7,$/;"	e	enum:__anon3
REGI_KEY_NOT_EXIST	FW_Header.h	/^	REGI_KEY_NOT_EXIST		= 8,$/;"	e	enum:__anon3
REGI_MAN_SYSTEM_ID	FW_Header.h	93;"	d
REGI_SUCCESS	FW_Header.h	/^	REGI_SUCCESS			= 6,$/;"	e	enum:__anon3
REGI_VALUE_SIZE	FW_Header.h	94;"	d
REQUEST_s	FW_Header.h	/^typedef struct REQUEST_s$/;"	s
REQUEST_t	FW_Header.h	/^} REQUEST_t;$/;"	t	typeref:struct:REQUEST_s
RESPONSE_s	FW_Header.h	/^typedef struct RESPONSE_s$/;"	s
RESPONSE_t	FW_Header.h	/^} RESPONSE_t;$/;"	t	typeref:struct:RESPONSE_s
RET_CODE_INVALID_PARAMETER	test_stat.h	/^    RET_CODE_INVALID_PARAMETER,$/;"	e	enum:__anon2
RET_CODE_SUCCESS	test_stat.h	/^    RET_CODE_SUCCESS,$/;"	e	enum:__anon2
RET_CODE_SYSTEM_FAIL	test_stat.h	/^    RET_CODE_SYSTEM_FAIL,$/;"	e	enum:__anon2
RET_CODE_UNKNOWN_USER	test_stat.h	/^    RET_CODE_UNKNOWN_USER,$/;"	e	enum:__anon2
ReturnCode_t	FW_Header.h	/^} ReturnCode_t;$/;"	t	typeref:enum:__anon3
SELECT	FW_Header.h	41;"	d
SELECT_s	FW_Header.h	/^typedef struct SELECT_s$/;"	s
SELECT_t	FW_Header.h	/^} SELECT_t;$/;"	t	typeref:struct:SELECT_s
SIZE_IP	FW_Header.h	61;"	d
SIZE_NAME	FW_Header.h	57;"	d
SIZE_PHONE	FW_Header.h	60;"	d
SIZE_POSITION	FW_Header.h	58;"	d
SIZE_TEAM	FW_Header.h	59;"	d
SRCS	Makefile	/^SRCS=	FW_Server.c test_stat.c FW_Pstmt.c FW_Ipc.c FW_Mmc.c FW_DB.c FW_Util.c FW_Regi.c FW_Trace.c$/;"	m
STATMIPCSVR	test_stat.h	10;"	d
STAT_FAIL	FW_Header.h	/^	STAT_FAIL				= -8,	$/;"	e	enum:__anon3
STAT_STYPE_MIPCSVR	test_stat.h	9;"	d
SYSTEM_FAIL	FW_Header.h	/^	SYSTEM_FAIL				= -12,$/;"	e	enum:__anon3
Select	FW_Client.c	/^int Select( struct REQUEST_s *ptRequestToServer )$/;"	f
SignalHandler	FW_Client.c	/^void SignalHandler( int nSigno )$/;"	f
SignalHandler	FW_Server.c	/^void SignalHandler( int nSigno )$/;"	f
TABLE_ATT_ID	FW_Header.h	65;"	d
TABLE_ATT_NAME	FW_Header.h	66;"	d
TABLE_ATT_PHONE	FW_Header.h	69;"	d
TABLE_ATT_POSITION	FW_Header.h	67;"	d
TABLE_ATT_TEAM	FW_Header.h	68;"	d
TABLE_NAME	FW_Header.h	64;"	d
TCP_RCV_TOTAL_INV	test_stat.h	/^    TCP_RCV_TOTAL_INV,$/;"	e	enum:__anon2
TRACE_MakeTrace	FW_Trace.c	/^int TRACE_MakeTrace( char *pszKey )$/;"	f
UDA_FAIL	FW_Header.h	/^	UDA_FAIL				= -9,$/;"	e	enum:__anon3
UDA_ITEM_NAME	FW_Header.h	74;"	d
UDA_LOW_GNAME	FW_Header.h	73;"	d
UDA_UPP_GNAME	FW_Header.h	72;"	d
UPDATE	FW_Header.h	42;"	d
UTIL_FreeList	FW_Util.c	/^void UTIL_FreeList( mpconf_list_t *ptSectList, mpconf_list_t *ptItemList, mpconf_list_t *ptValueList )$/;"	f
UTIL_GetConfig	FW_Util.c	/^int UTIL_GetConfig( char *pszIp, int *pnPort, int nSizeIp )$/;"	f
Update	FW_Client.c	/^int Update( struct REQUEST_s *ptRequestToServer )$/;"	f
_FW_HEADER_H_	FW_Header.h	3;"	d
__ITEM_END__	__st_sample.h	/^    __ITEM_END__$/;"	e	enum:__anon1
__ITEM_END__	test_stat.h	/^    __ITEM_END__$/;"	e	enum:__anon2
____st_sample_H__	__st_sample.h	3;"	d
__test_stat_H__	test_stat.h	3;"	d
atArgsAdd	FW_Mmc.c	/^oammmc_arg_info_t atArgsAdd[] =$/;"	v
atArgsAddTrace	FW_Mmc.c	/^oammmc_arg_info_t atArgsAddTrace[] =$/;"	v
atArgsChg	FW_Mmc.c	/^oammmc_arg_info_t atArgsChg[] =$/;"	v
atArgsDel	FW_Mmc.c	/^oammmc_arg_info_t atArgsDel[] =$/;"	v
atArgsDelTrace	FW_Mmc.c	/^oammmc_arg_info_t atArgsDelTrace[] =$/;"	v
atArgsDis	FW_Mmc.c	/^oammmc_arg_info_t atArgsDis[] =$/;"	v
atArgsDisTrace	FW_Mmc.c	/^oammmc_arg_info_t atArgsDisTrace[] =$/;"	v
en_item_index_t	__st_sample.h	/^}en_item_index_t;$/;"	t	typeref:enum:__anon1
en_item_index_t	test_stat.h	/^}en_item_index_t;$/;"	t	typeref:enum:__anon2
g_nFlag	FW_Client.c	/^int g_nFlag = FLAG_RUN;$/;"	v
g_nFlag	FW_Server.c	/^int g_nFlag = FLAG_RUN;$/;"	v
g_ptDalConn	FW_Server.c	/^DAL_CONN *g_ptDalConn = NULL;$/;"	v
g_ptPstmtDelete	FW_Server.c	/^DAL_PSTMT *g_ptPstmtDelete = NULL;$/;"	v
g_ptPstmtInsert	FW_Server.c	/^DAL_PSTMT *g_ptPstmtInsert = NULL;$/;"	v
g_ptPstmtNumTuples	FW_Server.c	/^DAL_PSTMT *g_ptPstmtNumTuples = NULL;$/;"	v
g_ptPstmtSelectAll	FW_Server.c	/^DAL_PSTMT *g_ptPstmtSelectAll = NULL;$/;"	v
main	FW_Client.c	/^int main( int argc, char *argv[] )$/;"	f
main	FW_Server.c	/^int main( int argc, char *argv[] )$/;"	f
nCntSelectAll	FW_Header.h	/^	int		nCntSelectAll;$/;"	m	struct:RESPONSE_s
nId	FW_Header.h	/^	int		nId;$/;"	m	struct:REQUEST_s
nId	FW_Header.h	/^	int		nId;$/;"	m	struct:RESPONSE_s
nId	FW_Header.h	/^	int		nId;$/;"	m	struct:SELECT_s
nMsgType	FW_Header.h	/^	int		nMsgType;$/;"	m	struct:REQUEST_s
nMsgType	FW_Header.h	/^	int		nMsgType;$/;"	m	struct:RESPONSE_s
nRC	FW_Header.h	/^	int		nRC;$/;"	m	struct:RESPONSE_s
stctl_dtl_type_list	test_stat.c	/^stctl_dtl_type_desc_t stctl_dtl_type_list[] = {$/;"	v
stctl_item_list	__st_sample.c	/^stctl_item_desc_t stctl_item_list[] = {$/;"	v
stctl_item_list	test_stat.c	/^stctl_item_desc_t stctl_item_list[] = {$/;"	v
szBuffer	FW_Header.h	/^	char	szBuffer[2048];$/;"	m	struct:RESPONSE_s
szName	FW_Header.h	/^	char	szName		[SIZE_NAME + 1];$/;"	m	struct:REQUEST_s
szName	FW_Header.h	/^	char	szName		[SIZE_NAME + 1];$/;"	m	struct:SELECT_s
szPhone	FW_Header.h	/^	char	szPhone		[SIZE_PHONE + 1];$/;"	m	struct:REQUEST_s
szPhone	FW_Header.h	/^	char	szPhone		[SIZE_PHONE + 1];$/;"	m	struct:SELECT_s
szPosition	FW_Header.h	/^	char	szPosition	[SIZE_POSITION + 1];$/;"	m	struct:REQUEST_s
szPosition	FW_Header.h	/^	char	szPosition	[SIZE_POSITION + 1];$/;"	m	struct:SELECT_s
szTeam	FW_Header.h	/^	char	szTeam		[SIZE_TEAM + 1];$/;"	m	struct:REQUEST_s
szTeam	FW_Header.h	/^	char	szTeam		[SIZE_TEAM + 1];$/;"	m	struct:SELECT_s
tCommandInfo	FW_Mmc.c	/^oammmc_cmd_t tCommandInfo[] =$/;"	v
tCommandTrace	FW_Mmc.c	/^oammmc_cmd_t tCommandTrace[] =$/;"	v
